
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ACCELERATION AT AVERAGE ENERGY EPERCENT FALSE FINAL FLOAT FOR FORCE GRAVITY GTOE ID IMPULSE IN INITIAL INT KINETIC LTOE NEXT NOTEQ PI PLANCK POSITION POTENTIAL STOP TIME TRUE VELOCITY WHILE X Y\n        TERM : NUMBER\n             | '+' NUMBER\n             | '-' NUMBER\n             | IDENTIFIER\n             | empty\n             | BOOLEAN\n             | sciences\n             \n        IDList : IDENTIFIER\n               | IDENTIFIER ',' IDList\n        empty :\n        BINOP : '+'\n              | '-'\n              | '*'\n              | '/'\n              | '='\n              | NOTEQ\n              | '<'\n              | '>'\n              | LTOE\n              | GTOE\n              | '&'\n              | '|'\n              \n        BOOLEAN : TRUE\n                | FALSE\n                \n        IDENTIFIER : ID\n        \n        NUMBER : INTEGER\n               | FLOATN\n               \n        FLOATN : FLOAT\n        \n        INTEGER : INT\n        \n        sciences : physics\n                 | EPERCENT '(' NUMBER ',' NUMBER ')'\n        \n        physics : POSITION '(' NUMBER ',' NUMBER ',' NUMBER ',' NUMBER ')'\n                | INITIAL VELOCITY '(' NUMBER ',' NUMBER ',' NUMBER ')'\n                | FINAL VELOCITY '(' NUMBER ',' NUMBER ',' NUMBER ',' BOOLEAN ')'\n                | AVERAGE VELOCITY '(' NUMBER ',' NUMBER ',' NUMBER ')'\n                | VELOCITY IN X '(' NUMBER ')'\n                | VELOCITY IN Y '(' NUMBER ')'\n                | ACCELERATION '(' NUMBER ',' NUMBER ',' NUMBER ')'\n                | POTENTIAL ENERGY '(' NUMBER ',' NUMBER ')'\n                | KINETIC ENERGY '(' NUMBER ',' NUMBER ')'\n        "
    
_lr_action_items = {'+':([0,],[3,]),'-':([0,],[4,]),'ID':([0,],[11,]),'$end':([0,1,2,5,6,7,8,9,10,11,12,13,14,16,17,26,27,67,70,71,82,83,88,90,92,93,95,],[-10,0,-1,-4,-5,-6,-7,-26,-27,-25,-23,-24,-30,-29,-28,-2,-3,-31,-36,-37,-39,-40,-38,-33,-35,-32,-34,]),'TRUE':([0,91,],[12,12,]),'FALSE':([0,91,],[13,13,]),'EPERCENT':([0,],[15,]),'INT':([0,3,4,28,29,34,39,42,43,45,46,47,48,50,51,54,59,62,63,65,66,68,74,78,79,80,84,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'FLOAT':([0,3,4,28,29,34,39,42,43,45,46,47,48,50,51,54,59,62,63,65,66,68,74,78,79,80,84,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'POSITION':([0,],[18,]),'INITIAL':([0,],[19,]),'FINAL':([0,],[21,]),'AVERAGE':([0,],[22,]),'VELOCITY':([0,19,21,22,],[20,30,32,33,]),'ACCELERATION':([0,],[23,]),'POTENTIAL':([0,],[24,]),'KINETIC':([0,],[25,]),',':([9,10,16,17,37,38,44,49,52,53,55,56,58,64,69,72,73,77,86,],[-26,-27,-29,-28,47,48,54,59,62,63,65,66,68,74,78,79,80,84,91,]),')':([9,10,12,13,16,17,57,60,61,75,76,81,85,87,89,94,],[-26,-27,-23,-24,-29,-28,67,70,71,82,83,88,90,92,93,95,]),'(':([15,18,23,30,32,33,35,36,40,41,],[28,29,34,39,42,43,45,46,50,51,]),'IN':([20,],[31,]),'ENERGY':([24,25,],[35,36,]),'X':([31,],[40,]),'Y':([31,],[41,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'TERM':([0,],[1,]),'NUMBER':([0,3,4,28,29,34,39,42,43,45,46,47,48,50,51,54,59,62,63,65,66,68,74,78,79,80,84,],[2,26,27,37,38,44,49,52,53,55,56,57,58,60,61,64,69,72,73,75,76,77,81,85,86,87,89,]),'IDENTIFIER':([0,],[5,]),'empty':([0,],[6,]),'BOOLEAN':([0,91,],[7,94,]),'sciences':([0,],[8,]),'INTEGER':([0,3,4,28,29,34,39,42,43,45,46,47,48,50,51,54,59,62,63,65,66,68,74,78,79,80,84,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'FLOATN':([0,3,4,28,29,34,39,42,43,45,46,47,48,50,51,54,59,62,63,65,66,68,74,78,79,80,84,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'physics':([0,],[14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> TERM","S'",1,None,None,None),
  ('TERM -> NUMBER','TERM',1,'p_TERM','parser.py',12),
  ('TERM -> + NUMBER','TERM',2,'p_TERM','parser.py',13),
  ('TERM -> - NUMBER','TERM',2,'p_TERM','parser.py',14),
  ('TERM -> IDENTIFIER','TERM',1,'p_TERM','parser.py',15),
  ('TERM -> empty','TERM',1,'p_TERM','parser.py',16),
  ('TERM -> BOOLEAN','TERM',1,'p_TERM','parser.py',17),
  ('TERM -> sciences','TERM',1,'p_TERM','parser.py',18),
  ('IDList -> IDENTIFIER','IDList',1,'p_IDList','parser.py',23),
  ('IDList -> IDENTIFIER , IDList','IDList',3,'p_IDList','parser.py',24),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',28),
  ('BINOP -> +','BINOP',1,'p_BINOP','parser.py',33),
  ('BINOP -> -','BINOP',1,'p_BINOP','parser.py',34),
  ('BINOP -> *','BINOP',1,'p_BINOP','parser.py',35),
  ('BINOP -> /','BINOP',1,'p_BINOP','parser.py',36),
  ('BINOP -> =','BINOP',1,'p_BINOP','parser.py',37),
  ('BINOP -> NOTEQ','BINOP',1,'p_BINOP','parser.py',38),
  ('BINOP -> <','BINOP',1,'p_BINOP','parser.py',39),
  ('BINOP -> >','BINOP',1,'p_BINOP','parser.py',40),
  ('BINOP -> LTOE','BINOP',1,'p_BINOP','parser.py',41),
  ('BINOP -> GTOE','BINOP',1,'p_BINOP','parser.py',42),
  ('BINOP -> &','BINOP',1,'p_BINOP','parser.py',43),
  ('BINOP -> |','BINOP',1,'p_BINOP','parser.py',44),
  ('BOOLEAN -> TRUE','BOOLEAN',1,'p_BOOLEAN','parser.py',49),
  ('BOOLEAN -> FALSE','BOOLEAN',1,'p_BOOLEAN','parser.py',50),
  ('IDENTIFIER -> ID','IDENTIFIER',1,'p_IDENTIFIER','parser.py',55),
  ('NUMBER -> INTEGER','NUMBER',1,'p_NUMBER','parser.py',60),
  ('NUMBER -> FLOATN','NUMBER',1,'p_NUMBER','parser.py',61),
  ('FLOATN -> FLOAT','FLOATN',1,'p_FLOATN','parser.py',66),
  ('INTEGER -> INT','INTEGER',1,'p_INTEGER','parser.py',71),
  ('sciences -> physics','sciences',1,'p_SCIENCES','parser.py',79),
  ('sciences -> EPERCENT ( NUMBER , NUMBER )','sciences',6,'p_SCIENCES','parser.py',80),
  ('physics -> POSITION ( NUMBER , NUMBER , NUMBER , NUMBER )','physics',10,'p_PHYSICS','parser.py',114),
  ('physics -> INITIAL VELOCITY ( NUMBER , NUMBER , NUMBER )','physics',9,'p_PHYSICS','parser.py',115),
  ('physics -> FINAL VELOCITY ( NUMBER , NUMBER , NUMBER , BOOLEAN )','physics',11,'p_PHYSICS','parser.py',116),
  ('physics -> AVERAGE VELOCITY ( NUMBER , NUMBER , NUMBER )','physics',9,'p_PHYSICS','parser.py',117),
  ('physics -> VELOCITY IN X ( NUMBER )','physics',6,'p_PHYSICS','parser.py',118),
  ('physics -> VELOCITY IN Y ( NUMBER )','physics',6,'p_PHYSICS','parser.py',119),
  ('physics -> ACCELERATION ( NUMBER , NUMBER , NUMBER )','physics',8,'p_PHYSICS','parser.py',120),
  ('physics -> POTENTIAL ENERGY ( NUMBER , NUMBER )','physics',7,'p_PHYSICS','parser.py',121),
  ('physics -> KINETIC ENERGY ( NUMBER , NUMBER )','physics',7,'p_PHYSICS','parser.py',122),
]
